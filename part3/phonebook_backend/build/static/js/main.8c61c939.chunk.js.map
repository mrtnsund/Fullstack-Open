{"version":3,"sources":["components/Person.js","components/Notification.js","components/Filter.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Person","props","id","person","name","number","onClick","onSubmit","Notification","message","charAt","className","Filter","onChange","value","PersonForm","valueName","onChangeName","valueNumber","onChangeNumber","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notification","setNotification","useEffect","personService","allPersons","numbersToDisplay","length","toLowerCase","includes","deletePerson","personToDelete","find","p","window","confirm","setTimeout","updateNumber","personToBeUpdated","changedPerson","concat","catch","error","event","target","preventDefault","some","newPerson","map","i","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c61c939.chunk.js","sourcesContent":["import React from 'react'\r\nconst Person = (props) => {\r\n    return (\r\n        <div id={props.person.id}>\r\n             {props.person.name} {props.person.number} <button onClick={props.onSubmit}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null){\r\n        return null;\r\n    } else if (message.charAt(0) === 'A' || message.charAt(0) === 'C'){\r\n        return (\r\n        <div className=\"add\">\r\n             {message}\r\n        </div> \r\n        )\r\n    } else {\r\n    return (\r\n        <div className=\"delete\">\r\n            {message}\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Filter = ({ onChange, value }) => {\r\n    return (\r\n        <div>\r\n        filter shown with: <input value={value} onChange={onChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.onSubmit}>\r\n                <div>\r\n                name: <input value={props.valueName} onChange={props.onChangeName} />\r\n                </div>\r\n                <div>\r\n                number: <input value={props.valueNumber} onChange={props.onChangeNumber} />\r\n                </div>\r\n                <div>\r\n                <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n  \r\n}\r\nconst deleteEntry = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll,create,update, deleteEntry }","import React, { useState, useEffect } from 'react'\r\n//Components\r\nimport Person from './components/Person'\r\nimport Notification from './components/Notification'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\n// import Persons from './components/Persons'\r\n//Service\r\nimport personService from './services/persons'\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [notification, setNotification] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(allPersons => {\r\n        setPersons(allPersons)\r\n      })\r\n  }, [])\r\n\r\n  const numbersToDisplay = (filter.length === 0)\r\n    ? persons\r\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n  const displayAll = () => numbersToDisplay.map((person, i) => {\r\n    return (\r\n      <Person\r\n        key={i}\r\n        person={person}\r\n        onSubmit={() => deletePerson(person.id)}\r\n        />      \r\n    )\r\n  })\r\n\r\n  const addNewPerson = (event) => {\r\n    event.preventDefault()\r\n    const person = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    if (persons.some(person => person.name === newName)) {\r\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\r\n        updateNumber(person)\r\n      }\r\n    }\r\n    else {\r\n      personService\r\n        .create(person)\r\n        .then(newPerson => {\r\n          setPersons(persons.concat(newPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setNotification(`Added ${newPerson.name}`)\r\n          setTimeout(() => {\r\n            setNotification(null)\r\n          }, 3000)\r\n        })\r\n        .catch(error => {\r\n          setNotification(`${error.response.data.error}`)\r\n          setTimeout(() => {\r\n            setNotification(null)\r\n          }, 3000)\r\n        })\r\n    }\r\n  } \r\n  const deletePerson = (id) => {\r\n    const personToDelete = persons.find(p => p.id === id)\r\n    if (window.confirm(`Do you want to delete ${personToDelete.name}?`)) {\r\n      personService\r\n        .deleteEntry(id)\r\n        .then(\r\n            setPersons(persons => persons.filter(person => person.id !== id))\r\n          )\r\n          setNotification(`Deleted ${personToDelete.name}`)\r\n          setTimeout(() => {\r\n            setNotification(null)\r\n          }, 3000)\r\n    }\r\n  }\r\n  const updateNumber = (props) => {\r\n    const personToBeUpdated = persons.find(p => p.name === props.name);\r\n    const changedPerson = { name: personToBeUpdated.name, number: props.number}\r\n\r\n    personService\r\n      .update(personToBeUpdated.id,changedPerson)\r\n      .then(person => {\r\n        setPersons(persons => persons.filter(person => person.id !== personToBeUpdated.id))\r\n        setPersons(persons.concat(changedPerson))\r\n        setNotification(`Changed ${changedPerson.name}`)\r\n        setTimeout(() => {\r\n          setNotification(null)\r\n        }, 3000)\r\n      })\r\n      .catch(error => {\r\n        setNotification(`${changedPerson.name} is already removed from server`)\r\n        setTimeout(() => {\r\n          setNotification(null)\r\n        }, 3000)\r\n      })\r\n\r\n    \r\n  }\r\n\r\n  const handleChangeName = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleChangeNumber = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleChangeFilter = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notification} />\r\n      <Filter onChange={handleChangeFilter} value={filter} />\r\n\r\n      <h2>add a new</h2>\r\n      <PersonForm onSubmit={addNewPerson} valueName={newName} onChangeName={handleChangeName} valueNumber={newNumber} onChangeNumber={handleChangeNumber} />\r\n\r\n\r\n      <h2>Numbers</h2>\r\n      {displayAll()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}